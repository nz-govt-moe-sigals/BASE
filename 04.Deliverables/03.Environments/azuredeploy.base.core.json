{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceLocation": {
            "metadata": {
                "description": "The default location within which to develop the Resources Group and its child Resources."
            },
            "type": "string",
            "minLength": 1,
            "allowedValues": [
                "Australia East",
                "Australia Southeast"
            ],
            "defaultValue": "[resourceGroup().location]"
        },
        "resourceNameTemplate": {
            "metadata": {
                "description": "The default name template for Resources (eg: 'MYORG-MYAPP-{ENVID}-{RESOURCETYPE}')'."
            },
            "type": "string",
            "minLength": 0,
            "defaultValue": "MYORG-MYMAPP-{ENVID}-{RESOURCETYPE}"
        },
        "armTemplateRoot": {
            "metadata": {
                "description": "The relative or otherwise base url for finding ARM Templates to download (replaces '{TEMPLATEFILENAME}' within strings, where found)."
            },
            "type": "string",
            "minLength": 0,
            "defaultValue": ""
        },
        "webServerFarmSku": {
            "metadata": {
                "description": "App Service server pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
            },
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "S1",
                "S2"
            ]
        },
        "sqlServerSku": {
            "metadata": {
                "description": "App Service server pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
            },
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "Basic",
                "S0",
                "S1",
                "S2"
            ]
        },
        
        
        "sqlServerAdministratorLogin": {
            "metadata": {
                "description": "administrator Login for when creating new SqlServers."
            },
            "type": "securestring",
            "minLength": 6,
            "defaultValue": "NOTADMIN"
        },
        "sqlServerAdministratorPassword": {
            "metadata": {
                "description": "administrator Password for when creating new SqlServers."
            },
            "type": "securestring",
            "minLength": 12,
            "defaultValue": "NOTANACCEPTABLECOMPLEXTWELVELETTERPASSWORD"
        },



        "defaultSqlDatabaseServerName": {
            "metadata": {
                "description": "If provided, look for specified database server, and create the database there. It's cheaper to reuse a common db (but it should be outside this Resource group)."
            },
            "type": "string",
            "minLength": 0,
            "defaultValue": ""
        }
    },
    "variables": {
        "uniqueResourceId": "[uniqueString(resourceGroup().id)]",
        "resourceNamePrefix": "azuredeploy.base.core",
        "armTemplateRoot" : "[parameters('armTemplateRoot')]",
        "resourceLocation" : ["parameters('resourceLocation')"],

        "webServerFarmName": "[concat(variables('resourceNamePrefix'),'.appServicePan')]",
        "webServerFarmPath": "[concat(variables('armTemplateRoot'), '/', variables('webServerFarmName'), '.json')]",
        "webServerFarm":{
            "sku":"[coalesce(parameters('webServerFarmSku')]"
        },
        "storageAccountName": "[concat(variables('resourceNamePrefix'),'.storageAccount')]",
        "storageAccountPath": "[concat(variables('armTemplateRoot'), '/', variables('storageAccountName'), '.json')]",

        "storageAccountContainerName": "[concat(variables('resourceNamePrefix'),'.storageAccountContainer')]",
        "storageAccountContainerPath": "[concat(variables('armTemplateRoot'), '/', variables('storageAccountContainerName'), '.json')]",

        "storageAccountPrivateContainerName": "[concat(variables('resourceNamePrefix'),'.storageAccountPrivateContainer')]",
        "storageAccountPrivateContainerPath": "[concat(variables('armTemplateRoot'), '/', variables('storageAccountContainerName'), '.json')]",
        
        "storageAccountPublicContainerName": "[concat(variables('resourceNamePrefix'),'.storageAccountPublicContainer')]",
        "storageAccountPublicContainerPath": "[concat(variables('armTemplateRoot'), '/', variables('storageAccountContainerName'), '.json')]",

        "sqlServerDatabaseServerName": "[concat(variables('resourceNamePrefix'),'.sqlServerDatabaseServer')]",
        "sqlServerDatabaseServerPath": "[concat(variables('armTemplateRoot'), '/', variables('sqlServerDatabaseServerName'), '.json')]",

        "sqlServerDatabaseName": "[concat(variables('resourceNamePrefix'),'.sqlServerDatabase')]",
        "sqlServerDatabasePath": "[concat(variables('armTemplateRoot'), '/', variables('sqlServerDatabaseName'), '.json')]",
        "sqlServer": {
            "Administrator" : {
                "sku": "[coalesce(parameters('sqlServerSku'),parameters('webServerFarmSku'))]",
                "login": "[parameters('sqlServerAdministratorLogin')]",
                "password": "[parameters('sqlServerAdministratorPassword')]"
                }
            }
        },
    "resources": [
        {
            "comments": "Ensures a Resource Group scoped unique App Service Plan",
            "name": "[variables('webServerFarmName')]",
            "apiVersion": "2017-05-10",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('webServerFarmPath')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "resourceLocation": {
                        "value": "[variables('resourceLocation')]"
                    },
                    "sku": {
                        "value": "[variables('webServerFarm.Sku')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "uniqueResourceId": {
            "type": "string",
            "value": "[variables('uniqueResourceId')]",
            "metadata": {
                "description": "The ResourceGroup scoped unique 13 character Id."
            }
        },
        "resourceNameName": {
            "type": "string",
            "value": "[parameters('resourceNameTemplate')]"
        }

    }
}