{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "sqlServerResourceMode": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Incremental",
      "allowedValues": [
        "Incremental"
      ]
    },
"sqlServerResourceName": {
      "type": "string"
    },
    "sqlServerLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "East US",
        "South Central US",
        "Southeast Asia",
        "West Central US",
        "West Europe",
        "West US 2"
      ],
      "metadata": {
        "description": "The location for the SQL service. This is parameterised because SQL servers cannot be deployed in all regions for subscription types."
      }
    },
    "sqlServerSku": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "sqlServerAdministratorLogin": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Provide the Sql Server Administrator's Login. Required when creating a new Database Server. This is unfortunate as it requires risk-mitigation processes around deployment to correctly secure the secret and not leave it in the hands of stakeholders that don't absolutely need to know it. Developers don't."
      }
    },
    "sqlServerAdministratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Provide the Sql Server Administrator's Password. Required when creating a new Database Server. This is unfortunate as it requires risk-mitigation processes around deployment to correctly secure the secret and not leave it in the hands of stakeholders that don't absolutely need to know it. Developers don't."
      }
    },



    

    "dbAuditStorageAccountName": {
      "type": "string",
      "minLength": 1
    },
    "dbContainerStorageAccountName": {
      "type": "string",
      "minLength": 1
    }
  },
  "variables": {

    "currentTemplateUrl": "[deployment().properties.templateLink.uri]",
    "currentTemplateUriRoot": "[uri(deployment().properties.templateLink.uri, '')]",
    "sql": {
      "server": {
        "id": "[concat(variables('idPrefix'),'.sqlServer' )]",
        "resourceMode": "[parameters('SqlServerResourceMode')]",
        "resourceName": "[parameters('sqlServerResourceName')]",
        "location": "[parameters('sqlServerLocation')]",
        "sku": "[parameters('sqlServerSku')]",
        "administrator": {
          "login": "[parameters('sqlServerAdministratorLogin')]",
          "loginPassword": "[parameters('sqlServerAdministratorLoginPassword')]"
        }  
      }      
    }
  },
  "resources": [
    {
      "type": "Microsoft.Sql/servers",
      "name": "[variables('sql').server.resourceName]",
      "location": "[variables('sql').server.location]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [],
      "tags": {
        "displayName": "SQL Server"
      },
      "properties": {
        "administratorLogin": "[variables('sql').server.administrator.login]",
        "administratorLoginPassword": "[variables('sql').server.administrator.loginPassword]"
      }
    }
  ],
  "outputs": {
      "resourceId": {
          "value": "[resourceId(variables('sql').server.resourceType, variables('sql').server.resourceName)]",
          "type": "string"
      }
}
}