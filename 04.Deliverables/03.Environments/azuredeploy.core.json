{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "defaultResourceLocation": {
            "type": "string",
            "minLength": 1,
            "allowedValues": [
                "Australia East",
                "Australia Southeast"
            ],
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The default location within which to develop the Resources Group and its inner Resources."
            }
        },
        "defaultResourceNameOrgIdentifier": {
            "type": "string",
            "minLength": 0,
            "defaultValue": "",
            "metadata": {
                "description": "The Org Identifier (eg: 'MYORG') used to build up the default Resource Name Template (eg: 'MYORG-MYAPP-AppService-xyz123')."
            }
        },
        "defaultResourceNameAppIdentifier": {
            "type": "string",
            "minLength": 0,
            "defaultValue": "",
            "metadata": {
                "description": "The App Identifier (eg: 'MYAPP') used to build up the default Resource Name Template  (eg: 'MYORG-MYAPP-AppService-xyz123')."
            }
        },
        "defaultResourceNameTemplate": {
            "type": "string",
            "minLength": 3,
            "defaultValue": "{ORG}-{APP}-{APPINST}-{RESOURCETYPE}-{RESOURCEUNIQUESTRING}",
            "metadata": {
                "description": "The default name template for Resources. Keywords replaced include: '{ORG}', '{APP}', '{RESOURCETYPE}', '{RESOURCEUNIQUESTRING}', '{RESOURCEUNIQUEGUID}'."
            }
        },
        "databaseServerName": {
            "type": "string",
            "minLength": 0,
            "defaultValue": "",
            "metadata": {
                "description": "If provided, look for specified database server, and create the database there. It's cheaper to reuse a common db (but it should be outside this Resource group)."
            }
            
        },
        "armTemplateBaseUrl": {
            "type": "string",
            "minLength": 0,
            "defaultValue": "{TEMPLATEFILENAME}",
            "metadata": {
                "description": "The relative or otherwise base url for finding ARM Templates to download (replaces '{TEMPLATEFILENAME}' within strings, where found)."
            }
            
        }
    },
    "variables": {
        "uniqueResourceId": {
            "type": "string",
            "minLength": 0,
            "value": "[uniqueString(resourceGroup().id)]",
            "metadata": {
                "description": "The ResourceGroup scoped unique 13 character Id. Same for all resources within the Resource Group. Make unique using prefixes, and suffixes."
            }
        }
    },
    "resources": [

    ],
    "outputs": {
        "uniqueResourceId": {
            "type": "string",
            "value": "[variables('uniqueResourceId')]", 
            "metadata": {
                "description": "The ResourceGroup scoped unique 13 character Id."
            }

        },
        "defaultTemplateName": {
            "type": "string",
            "value": "[parameters('defaultResourceNameTemplate')]"
        }
    }
}