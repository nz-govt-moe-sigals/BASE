// -=-=-=-=-1-=-=-=-=-2-=-=-=-=-3-=-=-=-=-4-=-=-=-=-5-=-=-=-=-6-=-=-=-=-7-=-=-=-=-8
// INSTRUCTIONS
// -=-=-=-=-1-=-=-=-=-2-=-=-=-=-3-=-=-=-=-4-=-=-=-=-5-=-=-=-=-6-=-=-=-=-7-=-=-=-=-8
// * This template is not much more a system specific (ie, in the system's source code)
//   simplified wrapper of a remote, much more complex, 'assembly'.
// * For the most part, leave it alone, concentrating on filling in the associated parameters file
//   within which you'll have to at consider providing the
// * Some Template vars are not provided by the Parameters file, but are provided
//   via the Build Agent, including:
//   * PrincipalId
// * Some params can be provided either in Params, or via Build Agent:
//   * environmentId
//   * templatesRelease
// * REFER TO CONFIDENTIAL INFO SAFELY USING 'REFERENCE' INSTEAD OF 'VALUE':
//   # "value": "EVERYBODY CAN SEE THIS...NOT GOOD"
//   "reference": {"keyVault": {"id": "/subscriptions/{TODO:SUBID}/resourcegroups/{TODO:RGNAME}/providers/Microsoft.KeyVault/vaults/{TODO:KVNAME}"},"secretName": "{SOMEKEY}"}
// -=-=-=-=-1-=-=-=-=-2-=-=-=-=-3-=-=-=-=-4-=-=-=-=-5-=-=-=-=-6-=-=-=-=-7-=-=-=-=-8
{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
	// -=-=-=-=-1-=-=-=-=-2-=-=-=-=-3-=-=-=-=-4-=-=-=-=-5-=-=-=-=-6-=-=-=-=-7-=-=-=-=-8
	// PARAMETERS: SECURITY
	// -=-=-=-=-1-=-=-=-=-2-=-=-=-=-3-=-=-=-=-4-=-=-=-=-5-=-=-=-=-6-=-=-=-=-7-=-=-=-=-8
	// The http based root url from which to download referenced Assembly ARM Templates. 
	// In most cases will be an Url to a Storage Account Container Url to which 
	// newly downloaded Source Files (just the ARM Templates) are copied to
	"linkedAssembliesArmTemplateRootUrl": {
	  "value": "https://nzmoestartpublic.blob.core.windows.net/public/start/releases/{TEMPLATESRELEASE}/arm-templates/assemblies/"
	  //"value": "https://nzmoestartpublic.blob.core.windows.net/public/start/releases/0.0/arm-templates/assemblies/"
	},
	// The http based root url from which to download referenced linked Resource ARM Templates. 
	// In most cases will be an Url to a Storage Account Container Url to which 
	// newly downloaded Source Files (just the ARM Templates) are copied to
	"linkedResourcesArmTemplateRootUrl": {
	  "value": "https://nzmoestartpublic.blob.core.windows.net/public/start/releases/{TEMPLATESRELEASE}/arm-templates/resources/"
	  //"value": "https://nzmoestartpublic.blob.core.windows.net/public/start/releases/0.0/arm-templates/resources/"
	},
	"linkedResourcesArmTemplateRootSas": {
	  "value": ""
	  //"value": "https://nzmoestartpublic.blob.core.windows.net/public/start/releases/0.0/arm-templates/resources/"
	},
	// -=-=-=-=-1-=-=-=-=-2-=-=-=-=-3-=-=-=-=-4-=-=-=-=-5-=-=-=-=-6-=-=-=-=-7-=-=-=-=-8
	// PARAMETERS: RESOURCE GROUP / NAME TEMPLATE
	// -=-=-=-=-1-=-=-=-=-2-=-=-=-=-3-=-=-=-=-4-=-=-=-=-5-=-=-=-=-6-=-=-=-=-7-=-=-=-=-8
	// Not required (ARM Template uses [resourceGroup().name]), but if you wish, provide something like
	// {regioncode}-{orgid}-{projectid}-{systemid}-{branchid}-{envid}
	// "resourceNameTemplate": {
	//   "value": "{REPLACE:resourceNameTemplate}"
	// },

	// -=-=-=-=-1-=-=-=-=-2-=-=-=-=-3-=-=-=-=-4-=-=-=-=-5-=-=-=-=-6-=-=-=-=-7-=-=-=-=-8
	// PARAMETERS: ENVIRONMENT
	// -=-=-=-=-1-=-=-=-=-2-=-=-=-=-3-=-=-=-=-4-=-=-=-=-5-=-=-=-=-6-=-=-=-=-7-=-=-=-=-8
	"environmentId": {"value": "BT"},
	// See Accompanying documentation for what flags can be used here:
	"environmentOverrides": {
	  "value": {
			"--": {},
			"default": {
				"microsoftCacheRedisProvision": true,
				"microsoftCognitiveServicesAccountsComputerVisionProvision": false,
				"microsoftCognitiveServicesAccountsCustomVisionProvision": false,
				"microsoftCognitiveServicesAccountsContentModeratorProvision": false,
				"microsoftCognitiveServicesAccountsLanguageUnderstandingProvision": false,
				"microsoftDataFactoryProvision": false,
				"microsoftDocumentDBDatabaseAccountsProvision": false,
				// Secrets Example: [ {"name": "keya", "type": "text/plain", "value": "som var..."}, {"name": "keyb", "type": "text/plain", "value": "somevar..."} ]
				"microsoftInsightsComponentsProvision": true,
				"microsoftKeyVaultVaultsProvision": true, 
				"microsoftKeyVaultVaultsAccessPoliciesProvision": true, 
				"microsoftLogicWorkflowsProvision":false,
				"microsoftMapsAccountsProvision": true,
				"microsoftServiceBusNamespacesProvision": false,
				"microsoftServiceBusNamespacesQueuesDefaultProvision": false,
				"microsoftServiceBusNamespacesTopicsDefaultProvision": false,
				"microsoftSqlServersDatabasesProvision": true,
				"microsoftStorageStorageAccountsDefaultProvision": true,
				"microsoftWebSitesProvision": true
			},
			"BT" : {

			},
			"DT": {

			}
	  }
	},

	
	// "microsoftWebSitesArray": {
	// 	// Tip: Do NOT put comments within arrays (creates really difficult to diagnose useless error messages).
	// 	// Tip: Each array item requires *all* the following attributes -- even if they contain just an empty string:
	// 	// resourceName
	// 	// resourceNameSuffix
	// 	// kind
	// 	// appSettings
	// 	"value": [
	// 			{"resourceName":"", "resourceNameSuffix":"1", "kind":"", "databaseResourceName": "", "hostName":"", "appSettings":{"akey":"foo!"} }
	// 	]
	// 	// {"resourceName":"", "resourceNameSuffix":"cc", "kind":"", "databaseResourceName": "", "appSettings":{"cfriggin":"specific"} },
	// 	// {"resourceName":"", "resourceNameSuffix":"dd", "kind":"", "databaseResourceName": "", "appSettings":{} },
	// 	// {"resourceName":"", "resourceNameSuffix":"ee", "kind":"", "databaseResourceName": "", "appSettings":{} },
	// 	// {"resourceName":"", "resourceNameSuffix":"ff", "kind":"", "databaseResourceName": "", "appSettings":{} },
	// 	// {"resourceName":"", "resourceNameSuffix":"gg", "kind":"", "databaseResourceName": "", "appSettings":{} },
	// 	// {"resourceName":"", "resourceNameSuffix":"hh", "kind":"", "databaseResourceName": "", "appSettings":{} },
	// 	// {"resourceName":"", "resourceNameSuffix":"ii", "kind": "functionapp", "databaseResourceName": "", "appSettings":{} }
	// },
	// "microsoftSqlServersDatabasesArray": {
	// 	"value": 
	// 			// Tip: Do NOT put comments within arrays (creates really difficult to diagnose useless error messages).
	// 			// Tip: Each array item requires *all* the following attributes -- even if they contain just an empty string:
	// 			// resourceName
	// 			// resourceNameSuffix
	// 			// sku: [Basic|S0|S1|s2]
	// 			// edition: [Basic|Standard]
	// 			// maxSizeBytes: "104857600", "524288000", "1073741824", "2147483648", "5368709120", "10737418240",...etc... getting expensive.
	// 		[
	// 			{"resourceName":"", "resourceNameSuffix":"1", "sku":"Basic", "edition":"Basic", "maxSizeBytes": "104857600"}
	// 		]
	// },

	"serviceIntegrationsArray": {
		// [
		// {"name":"", "description":"", "uri":"", "tenantId":"", "clientId":"", "clientSecret":"", "clientMiscConfig":"", "keyVaultResourceId":""}
		// ]
		// REALLY IMPORTANT: 
		// I KEEP ON FORGETTING THIS -- BUT IF 
		// YOU COMMENT OUT SOMETHING
		// HAVE TO REMOVE FROM ARRAY (COMMENTS IN ARRAYS CAUSE BUGS)
			"value": [
				{ "name":"SmtpService",             "description":"sendgrid-based.", "uri": "smtp.sendgrid.net", "tenantId":"", "clientId": "apikey", "clientSecret":"service-integration-smtpservice-clientsecret", "clientMiscConfig":"", "keyVaultResourceId": "/subscriptions/b81bf4a6-b746-41c2-ac29-9466c74f2b57/resourceGroups/NZ-MOE-BASE-000000-DT/providers/Microsoft.KeyVault/vaults/nzmoebase000000dt"},
				{ "name":"malwareDetectionService", "description":"scanii-based.",   "uri": "https://api.scanii.com/v2.1",                       "tenantId":"",  "clientId": "aa56c96e819e0406ca70805853d05f45",  "clientSecret":"service-integration-malwaredetectionservice-clientsecret", "clientMiscConfig":"", "keyVaultResourceId": "/subscriptions/b81bf4a6-b746-41c2-ac29-9466c74f2b57/resourceGroups/NZ-MOE-BASE-000000-DT/providers/Microsoft.KeyVault/vaults/nzmoebase000000dt"},
				{ "name":"ipGeoConversionService",  "description":"ipstack-based.",  "uri": "https://atlas.microsoft.com/geolocation/ip/json",    "tenantId":"", "clientId": "n/a",   "clientSecret":"service-integration-ipgeoconversionservice-clientsecret", "clientMiscConfig":"", "keyVaultResourceId": "/subscriptions/b81bf4a6-b746-41c2-ac29-9466c74f2b57/resourceGroups/NZ-MOE-BASE-000000-DT/providers/Microsoft.KeyVault/vaults/nzmoebase000000dt"}
			]
			// { "name":"NewOAuthService",         "description":"AAD-based.",  "uri": "...uri...",    "tenantId":"...tenantId...", "clientId": "...clientId...",   "clientSecret":"...clientsecret...", "clientMiscConfig":"", "keyVaultResourceId":""},
			// { "name":"NewOAuthB2CService",      "description":"B2C-specific-Entensions.",  "uri": "...uri...",    "tenantId":"...tenantId...", "clientId": "...clientId...",   "clientSecret":"...clientsecret...", "clientMiscConfig":"...policy?...", "keyVaultResourceId":""},
			// { "name":"NewOidcService",          "description":"B2C-based.",  "uri": "...uri...",    "tenantId":"...tenantId...", "clientId": "...clientId...",   "clientSecret":"...clientsecret...", "clientMiscConfig":"", "keyVaultResourceId":""}

	},
	// -=-=-=-=-1-=-=-=-=-2-=-=-=-=-3-=-=-=-=-4-=-=-=-=-5-=-=-=-=-6-=-=-=-=-7-=-=-=-=-8
	// PARAMETERS: MICROSOFT / SQL / SERVERS
	// -=-=-=-=-1-=-=-=-=-2-=-=-=-=-3-=-=-=-=-4-=-=-=-=-5-=-=-=-=-6-=-=-=-=-7-=-=-=-=-8
	"microsoftSqlServersAdministratorLogin": {
	  "value": "NOTADMIN"
	},
	"microsoftSqlServersAdministratorLoginPassword": {
	  "value": "N0t@P@ssword"
	},
	"microsoftSqlServerConnectionStringType": {
		"value": "classic"
	},
	//"microsoftWebSitesConfigConnectionStrings": {
	//	"value": {
	//		"Default": {
	//			"value": "Server=mySuperServerAddress;Database=myDataBase;Trusted_Connection=True;",
	//			"type": "SQLAzure"
	//		}
	//	}
	//},

	
	"serviceIntegrationOIDCServiceEnabled":{"value":true},
	"serviceIntegrationOIDCClientServiceTenant":{"value":"BaseCommonTest.onmicrosoft.com"},
	"serviceIntegrationOIDCServiceName":{"value":""},
	"serviceIntegrationOIDCServiceUri":{"value":""},
	"serviceIntegrationOIDCServiceClientId":{"value":"7ab78d6c-ab3f-40e2-9914-b624ee721a0d"},
	"serviceIntegrationOIDCServiceClientSecret":{"value":"kKN);5ls5}D*1qUJIQ;D8`]1"},
	"serviceIntegrationOIDCServiceClientMisc":{"value":""},
	// // + 2 specific to OAuth
	"serviceIntegrationOIDCServiceClientRedirectUri":{"value":"https://nzmoebase0000bt.azurewebsites.net/"},
	"serviceIntegrationOIDCServiceClientPostLogoutRedirectUri":{"value":"https://nzmoebase0000bt.azurewebsites.net/"},
	// // + 4 specific to OIDC
	"serviceIntegrationOIDCServicePoliciesSignUpSignInPolicyId":{"value":"B2C_1_B2C_Default_Policy"},
	"serviceIntegrationOIDCServicePoliciesUserProfilePolicyId":{"value":"B2C_1_B2C_Default_Policy"},
	"serviceIntegrationOIDCServicePoliciesEditProfilePolicyId":{"value":"B2C_1_B2C_Default_Edit_Policy"},
	"serviceIntegrationOIDCServicePoliciesResetPasswordPolicyId":{"value":"B2C_1_B2C_Default_Reset_Policy"},
	// -------------------------------------------------------
	"serviceIntegrationOAuthServiceClientTenant": {"value":"BaseCommonTest.onmicrosoft.com"},
	"serviceIntegrationOAuthServiceUri": {"value":"https://BaseCommonTest.onmicrosoft.com/ADBaseTestWebApi"},
	"serviceIntegrationOAuthServiceClientId": {"value":"cb8b69cd-9020-4860-b043-782d21888cac"},

	"serviceIntegrationOAuthServiceClientIdB2C": {"value":"36f35e49-1b75-4942-ae4b-53b011abdd32"},
	"serviceIntegrationOAuthServiceUriB2C": {"value":"https://BaseCommonTest.onmicrosoft.com/BaseTestWebApi"},
	"serviceIntegrationOAuthServicePolicyIdB2C": {"value":"B2C_1_B2C_Default_Policy"}
	
	// "serviceIntegrationSMTPServiceClientId" : {"value":"apikey"},
	// //Todo make keyVault reference from another keyVault
	// "serviceIntegrationSMTPServiceClientSecret" : {"value":"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"},
	// "serviceIntegrationSMTPServiceUri" : {"value":"smtp.sendgrid.net"},
	// //Todo make keyVault reference from another keyVault, or from the actual create GeoIP service, seems weird
	// "serviceIntegrationIPGeoConversionServiceUri" : {"value":"https://atlas.microsoft.com/geolocation/ip/json"},
	// "serviceIntegrationIPGeoConversionServiceClientSecret" : {"value":"2R4g-tc2ryRIRk1I2z6PQkffBd9_KdVk5wdbtLQdzzc"},
	// //Todo make keyVault reference from another keyVault
	// "serviceIntegrationMalwareDetectionServiceUri" : {"value":"https://api.scanii.com/v2.1"},
	// "serviceIntegrationMalwareDetectionServiceClientId" : {"value":"aa56c96e819e0406ca70805853d05f45"},
	// "serviceIntegrationMalwareDetectionServiceClientSecret" : {"value":"f83c0d9b9"}
  }
}