<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  https://go.microsoft.com/fwlink/?LinkId=301880
  -->
<configuration>
  <configSections>
    
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="hostsSection" type="App.Core.Infrastructure.Services.Configuration.Implementations.AppHostNames.HostsSection, App.Core.Infrastructure, Version=1.0.0.0, Culture=neutral" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <appSettings>
    <!-- REFER TO README.SETTINGS.MD FILE TO KNOW WHAT SETTINGS ARE AVAILABLE, AND WHERE THEY ARE DEFINED
         (IN APPSETTINGS, IN PIPELINE, IN KEYVAULT):
    -->
    <!--
    As per https://www.microsoftpressstore.com/articles/article.aspx?p=2473126
    The Browser Link helps Visual Studio communicate with the browser running the app that’s being debugged and allows it to respond to events. 
    The unfortunate side effect for our scenario (OIDC breakpointing) is that Browser Link produces extra traffic.
    -->
    <add key="vs:EnableBrowserLink" value="false"></add>
    <!-- SECTION: Default ASP.MVC stuff: -->
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <!-- SETTINGS / REQUIRED:FALSE / SRC:APPSETTINGS -->
    <add key="App-Code-DemoMode" value="false" />
    <!-- Tip: 'StorageConnectionString' is a BuiltIn key that shortcircuits 
         storage to go to local storage emulator rather than on Azure -->
    <add key="StorageConnectionString" value="UseDevelopmentStorage=false;" />
    <!-- DEV SETTINGS...BUT MUST BE OVERWRITTEN BY PIPEINE! -->
    <add key="Service-Integration-Azure-Arm-Resources-DefaultName" value="nzmoebase000000dt" />
    <add key="Service-Integration-Azure-SqlDatabase-CodeFirst-AttachDebuggerToPSSeeding" value="false" />
    <add key="Service-Integration-Azure-SqlDatabase-CodeFirst-SeedIncludeDemoEntries" value="true" />
    
    <!-- MODULE 2 SPECIFIC -->
    <add key="App-Module2-SchoolImportSourcePath" value="Z:\U\SKY\D\NOSYNC\Repositories\FooDemoServer\FooDemoServer" />
    <!-- MODULE 31 SPECIFIC -->
    <add key="App-Module31-Extract-DocumentDb-Uri" value="https://nzmoebase.documents.azure.com:443/" />
    <add key="App-Module31-Extract-DocumentDb-AuthorisationKey" value="wEDBI7B1MPHtNK4y2Myi1h5falYVviMuVBQHgI9hUzT4HnLxsRCJzUC4BPvXW2XEzPJHFztRzhpRK6lBI3NG6A==" />
    <add key="App-Module31-Extract-DocumentDb-DatabaseName" value="dataFactory" />
    <add key="App-Module31-Extract-DocumentDb-CollectionName" value="syncData" />
    <!-- MODULE 32 SPECIFIC -->
    <add key="App-Module32-Extract-DocumentDb-Uri" value="https://nzmoebase.documents.azure.com:443/" />
    <add key="App-Module32-Extract-DocumentDb-AuthorisationKey" value="wEDBI7B1MPHtNK4y2Myi1h5falYVviMuVBQHgI9hUzT4HnLxsRCJzUC4BPvXW2XEzPJHFztRzhpRK6lBI3NG6A==" />
    <add key="App-Module32-Extract-DocumentDb-DatabaseName" value="dataFactory" />
    <add key="App-Module32-Extract-DocumentDb-CollectionName" value="syncData" />


    <!-- IDA SECTION -->
    <add key="Service-Integration-Oidc-ApproachType" value="B2CUsingOIDCAndCookiesAndBearerTokens" />
    <add key="Service-Integration-Oidc-Service-App-IdUri" value="https://BaseCommonTest.onmicrosoft.com/BaseTestWebApi" />
    
    <!-- MVC webapp config-->
    <!--add key="Service-Integration-WebApp-Oidc-Client-AuthorityUri" value="" / --><!-- can override if you need a good reason-->
    <add key="Service-Integration-WebApp-Oidc-Client-Id" value="7ab78d6c-ab3f-40e2-9914-b624ee721a0d" />
    <add key="Service-Integration-WebApp-Oidc-Client-Secret" value="kKN);5ls5}D*1qUJIQ;D8`]1" />
    <add key="Service-Integration-WebApp-Oidc-Client-Tenant" value="BaseCommonTest.onmicrosoft.com" />
    <add key="Service-Integration-WebApp-Oidc-Client-RedirectUri" value="https://localhost:44311/" />
    <add key="Service-Integration-WebApp-Oidc-Client-PostLogoutRedirectUri" value="https://localhost:44311/" />

    <add key="Service-Integration-WebApp-Oidc-Policies-DefaultPolicyId" value="B2C_1_B2C_Default_Policy" />
    <add key="Service-Integration-WebApp-Oidc-Policies-SignUpSignInPolicyId" value="B2C_1_B2C_Default_Policy" />
    <add key="Service-Integration-WebApp-Oidc-Policies-UserProfilePolicyId" value="B2C_1_B2C_Default_Policy" />
    <add key="Service-Integration-WebApp-Oidc-Policies-EditProfilePolicyId" value="B2C_1_B2C_Default_Edit_Policy" />
    <add key="Service-Integration-WebApp-Oidc-Policies-ResetPasswordPolicyId" value="B2C_1_B2C_Default_Reset_Policy" />
    <!--add key="Service-Integration-WebApp-Oidc-policies-SignUpnPolicyId" value="" /--><!-- Technically deprecated but can set it -->
    <!--add key="Service-Integration-WebApp-Oidc-policies-SignInPolicyId" value="" /--><!-- Technically deprecated but can set it -->

    <!-- API config-->
    <!--add key="Service-Integration-Api-Oidc-Client-AuthorityUri" value="" /--><!-- can override if you need a good reason-->
    <add key="Service-Integration-Api-Oidc-Client-Id" value="cb8b69cd-9020-4860-b043-782d21888cac" />
    <add key="Service-Integration-Api-Oidc-Client-App-IdUri" value="https://BaseCommonTest.onmicrosoft.com/ADBaseTestWebApi" />
    <add key="Service-Integration-Api-Oidc-Client-Tenant" value="BaseCommonTest.onmicrosoft.com" />
    <add key="Service-Integration-Api-Oidc-Client-IdB2C" value="36f35e49-1b75-4942-ae4b-53b011abdd32" /> <!-- if app is b2c configured/required set -->
    <add key="Service-Integration-Api-Oidc-Client-App-IdUriB2C" value="https://BaseCommonTest.onmicrosoft.com/BaseTestWebApi" /> <!-- if app is b2c configured/required  set-->
    <add key="Service-Integration-Api-Oidc-Policies-PolicyIdB2C" value="B2C_1_B2C_Default_Policy" /> <!-- if app is b2c configured/required  set-->

    <!-- END OIDC SECTION -->

  </appSettings>
  <connectionStrings>
    <add name="Default" providerName="System.Data.SqlClient" connectionString="Data Source=(localdb)\mssqllocaldb;Database=AppDbContextMod;Integrated Security=True" />
  </connectionStrings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
    <!-- You can set the DbContext Initializer via config, or via AppCoreDatabaseInitializerConfigure, AppModule01DatabaseInitializerConfigure, etc. -->
    <contexts>
      <!-- Tip: Use Type and Assembly name. Or FQ name as long as it is exactly right (or it won't find it) -->
      <!-- Tip: You won't be able to Resharper F12 until App.Core.Application has a direct reference to App.xxx.Infrastructure -->
      <context type="App.Core.Infrastructure.Db.Context.Default.AppCoreDbContext, App.Core.Infrastructure">
        <databaseInitializer type="App.Core.Infrastructure.Db.Context.Default.AppCoreDatabaseInitializer, App.Core.Infrastructure" />
      </context>
      <context type="App.Module01.Infrastructure.Db.Context.Default.AppModuleDbContext, App.Module01.Infrastructure">
        <databaseInitializer type="App.Module01.Infrastructure.Db.Context.Default.AppModuleDatabaseInitializer, App.Module01.Infrastructure" />
      </context>
      <context type="App.Module11.Infrastructure.Db.Context.Default.AppModuleDbContext, App.Module11.Infrastructure">
        <databaseInitializer type="App.Module11.Infrastructure.Db.Context.Default.AppModuleDatabaseInitializer, App.Module11.Infrastructure" />
      </context>
      <context type="App.Module22.Infrastructure.Db.Context.Default.AppModuleDbContext, App.Module22.Infrastructure">
        <databaseInitializer type="App.Module22.Infrastructure.Db.Context.Default.AppModuleDatabaseInitializer, App.Module22.Infrastructure" />
      </context>
      <context type="App.Module31.Infrastructure.Db.Context.Default.AppModuleDbContext, App.Module31.Infrastructure">
        <databaseInitializer type="App.Module31.Infrastructure.Db.Context.Default.AppModuleDatabaseInitializer, App.Module31.Infrastructure" />
      </context>
      <context type="App.Module32.Infrastructure.Db.Context.Default.AppModuleDbContext, App.Module32.Infrastructure">
        <databaseInitializer type="App.Module32.Infrastructure.Db.Context.Default.AppModuleDatabaseInitializer, App.Module32.Infrastructure" />
      </context>
      <context type="App.Module33.Infrastructure.Db.Context.Default.AppModuleDbContext, App.Module33.Infrastructure">
        <databaseInitializer type="App.Module33.Infrastructure.Db.Context.Default.AppModuleDatabaseInitializer, App.Module33.Infrastructure" />
      </context>
    </contexts>
  </entityFramework>
  <hostsSection>
    <hostNames>
      <!-- Identify urls where we can expect Tenancy infront (www. is taken care of, so don't worry about it)-->
      <!-- Either list every env that can have tenancy infront, or do xml transformation on deploy -->
      <!-- expecting a * e.g. *.base.com -->
      <host name="*.baseplatform.space" />
    </hostNames>
    <routeNames>
      <!-- Key routes to ignore for Tenancy  -->
      <route name="api" />
      <route name="odata" />
      <route name="view" />
    </routeNames>
  </hostsSection>
  <!-- SETUP: Lock off access to temp Upload directory -->
  <location path="Uploads">
    <system.web>
      <authorization>
        <deny users="*" />
      </authorization>
    </system.web>
  </location>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="AutoMapper" publicKeyToken="BE96CD2C38EF1005" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
			</dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed" />
        <bindingRedirect oldVersion="0.0.0.0-11.0.0.0" newVersion="11.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Clients.ActiveDirectory" publicKeyToken="31BF3856AD364E35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.19.6.14301" newVersion="3.19.6.14301" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.6.0" newVersion="5.2.6.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.6.0" newVersion="5.2.6.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.IdentityModel.Tokens.Jwt" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.2.0" newVersion="5.2.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.1.2" newVersion="4.1.1.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.OData.Core" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-7.4.4.20330" newVersion="7.4.4.20330" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.OData.Edm" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-7.4.4.20330" newVersion="7.4.4.20330" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Extensions.DependencyInjection.Abstractions" publicKeyToken="adb9793829ddae60" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.1.1.0" newVersion="1.1.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Extensions.DependencyInjection" publicKeyToken="adb9793829ddae60" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.1.1.0" newVersion="1.1.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Spatial" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-7.4.4.20330" newVersion="7.4.4.20330" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Xml.ReaderWriter" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Diagnostics.DiagnosticSource" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Protocols" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.2.0" newVersion="5.2.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Tokens" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.2.0" newVersion="5.2.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Logging" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.1.4.0" newVersion="1.1.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.ApplicationInsights" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.4.0" newVersion="2.6.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Protocol.Extensions" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.0.40306.1554" newVersion="1.0.40306.1554" />
      </dependentAssembly>
      <!--
          IF you put your plugin in a folder that isn't bin, add it to the probing path
      -->
      <!--<probing privatePath="bin;bin\plugins" />-->
      <!--<dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Clients.ActiveDirectory" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.19.6.14301" newVersion="3.19.6.14301" />
      </dependentAssembly>-->
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Clients.ActiveDirectory.Platform" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.19.6.14301" newVersion="3.19.6.14301" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.AspNet.WebApi.Versioning" publicKeyToken="adb9793829ddae60" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.3.0.0" newVersion="2.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.IO.Compression" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.2.0" newVersion="4.1.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.OData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.1.0.10907" newVersion="6.1.0.10907" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Azure.KeyVault.Core" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-5.2.6.0" newVersion="5.2.6.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.AspNet.TelemetryCorrelation" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.0.3.0" newVersion="1.0.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Clients.ActiveDirectory" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.19.6.14301" newVersion="3.19.6.14301" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.IO.FileSystem" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.2.0" newVersion="4.0.2.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.IdentityModel.Protocols.OpenIdConnect" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.2.0" newVersion="5.2.2.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.7.1" />
      </system.Web>
  -->
  <system.web>
    <!-- 
    SETUP STEP: for optimizeCompilations, see https://blogs.msdn.microsoft.com/davidebb/2009/04/15/a-new-flag-to-optimize-asp-net-compilation-behavior/
    -->
    <compilation optimizeCompilations="true" debug="true" targetFramework="4.6.2">
      <assemblies>
        <!--<add assembly="App.Module01.Application" />
        <add assembly="App.Module02.Application" />-->
      </assemblies>
    </compilation>
    <!-- SETUP STEP: Allow for remote debuging when deployed to Azure by setting to Off (On/Off/RemoteOnly)-->
    <!-- Do not use system.web/customErrors(IIS6). Use system.webServer/httpErrors (IIS7+). -->
    <!--<customErrors mode="On" defaultRedirect="/HttpErrors/HTTP500.html" redirectMode="ResponseRewrite">
      <error statusCode="400" redirect="/HttpErrors/HTTP400.html" />
      <error statusCode="401" redirect="/HttpErrors/HTTP401.html" />
      <error statusCode="402" redirect="/HttpErrors/HTTP402.html" />
      <error statusCode="403" redirect="/HttpErrors/HTTP403.html" />
      -->
    <!--<error statusCode="404" redirect="/HttpErrors/HTTP404.html" />-->
    <!--
      <error statusCode="500" redirect="/HttpErrors/HTTP500.html" />
    </customErrors>-->
    <customErrors mode="Off" />
    <!-- SETUP STEP -->
    <!-- For Security Objectives: mitigate XSS, by decorating cookies with HttpOnlyCookies, 
         making them inaccessible to client-side scripts.  
         Ensure cookies are not sent over unencrypted wires by setting require SSL 
         -->
    <httpCookies httpOnlyCookies="true" requireSSL="true" />
    <httpModules>
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" />
    </httpModules>
    <!--
    As per:
    https://msdn.microsoft.com/en-us/library/e1f13641(v=vs.100).aspx
    https://blogs.msdn.microsoft.com/webdev/2012/11/19/all-about-httpruntime-targetframework/
    For Security objectives: We can replace the default encoder with the more capable XSS nuget package's Encoder.
    Note that in ASP.NET Core this is no longer a requirement as they did a better job.
    
    For Security objectives: Remove the overly verbose X-AspNet-Version header by setting enableVersionHeader=false 
              Note that Visual Studio uses this to determine the ASP.NET version.
    -->
    <httpRuntime enableVersionHeader="false" encoderType="System.Web.Security.AntiXss.AntiXssEncoder" requestValidationMode="4.0" targetFramework="4.6.1" />
  </system.web>
  <system.webServer>
    <!-- 
     Notes regarding using httpErrors.
     a) The objective we are after is to display a prettier error page. 
        But the response http error code (eg: HTTP404.html) must 
        not be '200' (that makes no sense - even if it is the default). 
        It must be the actual error code itself.
        You can check that by using F12 in chrome, and put in a nonsense path.
     b) It's trickier than it looks. To do it:
     c) remove customErrors tag completely (only was needed for IIS6. HttpErrors is the new route)
     d) errorMode: use Custom generally, or DetailedLocalOnly, unless *debugging in Azure* in which case use `Detailed` 
     e) existingResponse: use "Replace", or you'll see the IIS error.
     f) existingResponse: use File to return an HTTP file.
     f) pay attention to path used:
        if httpErrors@defaultResponseMode or error@responseMode is set to `File`, 
        then paths have to use forward slashes as they are filepaths - not urls.
     errorMode="DetailedLocalOnly|Detailed|Custom"
     existingResponse="Auto|Replace|PassThrough"
     defaultResponseMode="File|ExecuteURL|Redirect"
     
                existingResponse="Replace"
    <httpErrors errorMode="DetailedLocalOnly" defaultResponseMode="File">
     -->
    <!--TAKEN OUT TILL WE GET UP AND RUNNING ON AZURE: <httpErrors errorMode="Detailed" defaultResponseMode="File">
      <clear />
      <error statusCode="400" path="HttpErrors\HTTP400.html" />
      <error statusCode="401" path="HttpErrors\HTTP401.html" />
      <error statusCode="403" path="HttpErrors\HTTP403.html" />
      <error statusCode="404" path="httperrors\http404.html" />
      <error statusCode="500" path="HttpErrors\HTTP500.html" />
      <error statusCode="501" path="HttpErrors\HTTP501.html" />
      <error statusCode="502" path="HttpErrors\HTTP502.html" />
      <error statusCode="503" path="HttpErrors\HTTP503.html" />
      <error statusCode="520" path="HttpErrors\HTTP520.html" />
      <error statusCode="521" path="HttpErrors\HTTP521.html" />
      <error statusCode="533" path="HttpErrors\HTTP533.html" />
    </httpErrors>-->
    <!-- SETUP STEP: Ensure Traffic is only over SSL-->
    <httpProtocol>
      <customHeaders>
        <remove name="X-Powered-By" />
        <!-- This Will conflict with Redirection. In other words, after clearing caching
             the site will accept a single unsecure request (eg: http://localhost:60011) and
             redirect it correctly to (eg: https://localhost:43311)...but with this header on it...
             which means the browser will no longer even bother sending a request to http://localhost:60011
             and client side updates it to making a request for https://localhost:60011 to which 
             there is no handler. Hence no redirection occurs. A poor end-user experience.-->
        <!--<add name="Strict-Transport-Security" value="max-age=16070400; includeSubDomains" />-->
        <!-- 
            For example: 
            limit all (using `default-src`) to being loaded over HTTPS
            limit scripts (using `script-src`) to self and Google’s CDN (https://ajax.googleapis.com)
            limit styles (using `style-src`) to self and Google’s CDN (https://ajax.googleapis.com). 
            limit images (using `img-src`) to our domain only. 
        -->
      </customHeaders>
    </httpProtocol>
    <staticContent>
      <remove fileExtension=".json" />
      <remove fileExtension=".woff" />
      <remove fileExtension=".woff2" />
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <mimeMap fileExtension=".woff" mimeType="application/woff" />
      <mimeMap fileExtension=".woff2" mimeType="application/woff2" />
    </staticContent>
    <!-- SETUP STEP: Ensure runAllManagedModulesForAllRequests (RAMMFAR) is true in order to ensure that 
    static resource requests can be throttled in case of a DNS attack
    -->
    <modules runAllManagedModulesForAllRequests="false">
      <!-- TelemetryCorrelationHttpModule is added when you sign up and configure App Insights-->
      <!-- ApplicationInsightsWebTracking was available upon new build -->
      <remove name="ApplicationInsightsWebTracking" />
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" preCondition="managedHandler" />
      <remove name="TelemetryCorrelationHttpModule" />
      <add name="TelemetryCorrelationHttpModule" type="Microsoft.AspNet.TelemetryCorrelation.TelemetryCorrelationHttpModule, Microsoft.AspNet.TelemetryCorrelation" preCondition="integratedMode,managedHandler" />
    </modules>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
    <rewrite>
      <rules>
        <rule name="No HTTPS for user agent AlwaysOn and Root of site" stopProcessing="true">
          <match url="^$" />
          <conditions>
            <add input="{HTTP_USER_AGENT}" pattern="^AlwaysOn$" />
          </conditions>
          <action type="None" />
        </rule>
        <rule name="Redirect to https">
          <match url="(.*)" />
          <conditions>
            <add input="{HTTPS}" pattern="Off" />
          </conditions>
          <action type="Redirect" url="https://{HTTP_HOST}/{R:1}" />
        </rule>
        <rule name="AngularJS Routes" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
            <add input="{REQUEST_URI}" pattern="^(.*)/(api|odata|view)/(.*)" ignoreCase="true" negate="true" />
          </conditions>
          <action type="Rewrite" url="/" />
        </rule>
      </rules>
    </rewrite>
  </system.webServer>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.8.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default /nowarn:1659;1699;1701" />
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.8.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
    </compilers>
  </system.codedom>
  <system.diagnostics>
    <trace autoflush="true" indentsize="0">
      <listeners>
        <!--<add name="myAppInsightsListener" type="Microsoft.ApplicationInsights.TraceListener.ApplicationInsightsTraceListener, Microsoft.ApplicationInsights.TraceListener"/>-->
      </listeners>
    </trace>
  </system.diagnostics>
</configuration>
