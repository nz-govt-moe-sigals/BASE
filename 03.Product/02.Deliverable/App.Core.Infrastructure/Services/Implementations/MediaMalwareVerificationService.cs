namespace App.Core.Infrastructure.Services.Implementations
{
    using System.Collections.Generic;
    using App.Core.Infrastructure.Services.Configuration;
    using App.Core.Shared.Models.Messages;

    /// <summary>
    ///     Service to validate whether an uploaded stream is malware or not.
    /// </summary>
    public class MediaMalwareVerificationService : IMediaMalwareVerificationService
    {
        private readonly IDiagnosticsTracingService _diagnosticsTracingService;
        private readonly MediaMalwareDetectionServiceConfiguration _mediaMalwareDetectionServiceConfiguration;

        public MediaMalwareVerificationService(IDiagnosticsTracingService diagnosticsTracingService,
            MediaMalwareDetectionServiceConfiguration mediaMalwareDetectionServiceConfiguration)
        {
            this._diagnosticsTracingService = diagnosticsTracingService;
            this._mediaMalwareDetectionServiceConfiguration = mediaMalwareDetectionServiceConfiguration;
        }

        public MediaMalwareScanResult Validate(byte[] fileBytes, string fileName, string contentMimeType)
        {
            var scanii = new ScaniiClient(this._diagnosticsTracingService,
                this._mediaMalwareDetectionServiceConfiguration.Key,
                this._mediaMalwareDetectionServiceConfiguration.Secret,
                this._mediaMalwareDetectionServiceConfiguration.BaseUri);


            var result =
                scanii.Process(fileBytes, fileName, contentMimeType);

            //In case:
            if (result.Findings == null)
            {
                result.Findings = new List<string>();
            }

            var results = new MediaMalwareScanResult
            {
                LatestScanMalwareDetected = result.Findings.Count > 0,
                LatestScanResults = result.Findings != null ? string.Join(";", result.Findings) : null
            };

            return results;
        }
    }
}